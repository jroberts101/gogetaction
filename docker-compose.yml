services:
  # NGINX for routing requests
  nginx:
    image: nginx:alpine
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./infra/docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certs:/etc/nginx/certs
    depends_on:
      - frontend
      - backend-api
    networks:
      - gogetaction

  # Frontend - Vite dev server
  frontend:
    image: node:20-alpine
    working_dir: /app
    command: sh -c "corepack enable && corepack prepare pnpm@latest --activate && pnpm install && pnpm dev"
    volumes:
      - ./packages/frontend:/app
    environment:
      - NODE_ENV=development
      - VITE_BACKEND_URL=${VITE_BACKEND_URL}
    networks:
      - gogetaction

  # Backend API
  backend-api:
    build: ./packages/backend-api
    command: pnpm dev
    volumes:
      - ./packages/backend-api:/app
      - /app/node_modules
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - BACKEND_PORT=${BACKEND_PORT:-5000}
      - MONGO_URI=${MONGO_URI}
    depends_on:
      - mongo
    networks:
      - gogetaction

  # Keycloak - Identity and Access Management
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    command: start-dev
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN:-admin}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD:-admin123}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
      - KC_DB_USERNAME=${POSTGRES_USER:-keycloak}
      - KC_DB_PASSWORD=${POSTGRES_PASSWORD:-keycloak}
    ports:
      - '8080:8080'
    depends_on:
      - postgres
    networks:
      - gogetaction

  # PostgreSQL - Database for Keycloak
  postgres:
    image: postgres:14
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=${POSTGRES_USER:-keycloak}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-keycloak}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - gogetaction

  # MongoDB
  mongo:
    image: mongo:latest
    volumes:
      - mongo_data:/data/db
    networks:
      - gogetaction

networks:
  gogetaction:
    driver: bridge

volumes:
  postgres_data:
  mongo_data:
